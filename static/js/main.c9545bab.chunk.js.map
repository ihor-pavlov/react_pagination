{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","goToPreviousPage","map","active","concat","goToNextPage","App","setCurrentPage","useState","itemsPerPage","setItemsPerPage","items","numberPage","availableItems","allItems","min","id","value","onChange","e","Number","target","htmlFor","visibleItems","visiblePage","countItems","slice","item","signaturePage","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCFF,MAAMG,EAAwCC,IAK9C,IAL+C,MACpDC,EAAK,QACLC,EAAO,YACPC,EAAc,EAAC,aACfC,GACDJ,EACC,MAAMK,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAoBC,IACpBA,IAASN,GACXC,EAAaK,IAoCjB,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAW,YAAa,CAAEC,SAA0B,IAAhBZ,IAAqBS,SACtEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACLC,QAvCiBC,KACH,IAAhBf,GACFK,EAAiBL,EAAc,IAsC3B,gBAA+B,IAAhBA,EAAkBS,SAClC,WA5BSnB,EAAW,EAAGY,GAEfc,KAAIV,GACfI,cAAA,MAEEF,UAAWG,IAAW,YAAa,CAAEM,OAAQjB,IAAgBM,IAAQG,SAErEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAK,OAAMZ,GACVQ,QAASA,IAAMT,EAAiBC,GAAMG,SAErCH,KATEA,KA6BPI,cAAA,MACEF,UAAWG,IAAW,YAAa,CACjCC,SAAUZ,IAAgBE,IACzBO,SAEHC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACLC,QAjDaK,KACfnB,IAAgBE,GAClBG,EAAiBL,EAAc,IAgD3B,gBAAeA,IAAgBE,EAAWO,SAC3C,eCvEIW,EAAgBA,KAC3B,MACOpB,EAAaqB,GAAkBC,mBAAS,IACxCC,EAAcC,GAAmBF,mBAAS,GAC3CG,EAAkBnC,EAAW,EAHrB,IAG+B0B,KAAItB,GAAC,QAAAwB,OAAYxB,KAyC9D,OACEa,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,2BAxCNiB,EA0CiB1B,EAzCjB2B,EAyC8BJ,EAxC9BK,EARY,GAWVlB,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAS,OACvBQ,EAAU,YAAAR,QAAYQ,EAAa,GAAKC,EAAiB,EAAC,OAAAT,OAAMf,KAAK0B,IAAIH,EAAaC,EAAgBC,GAAS,QAAAV,OAAOU,EAAQ,QAsCzIrB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACRuB,GAAG,kBACHtB,UAAU,eACVuB,MAAOR,EACPS,SApCmBC,IAC3BT,EAAgBU,OAAOD,EAAEE,OAAOJ,QAChCV,EAAe,IAkCuBZ,SAAA,CAE9BC,cAAA,UAAQqB,MAAM,IAAGtB,SAAC,MAClBC,cAAA,UAAQqB,MAAM,IAAGtB,SAAC,MAClBC,cAAA,UAAQqB,MAAM,KAAItB,SAAC,OACnBC,cAAA,UAAQqB,MAAM,KAAItB,SAAC,YAIvBC,cAAA,SAAO0B,QAAQ,kBAAkB5B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACd,EAAU,CACTE,MAxEQ,GAyERC,QAASwB,EACTvB,YAAaA,EACbC,aA1DoBK,IACxBe,EAAef,MAQI+B,EACnBT,EACAU,EACAC,IAGE7B,cAAA,MAAAD,SACGmB,EACEY,OAAOF,EAAc,GAAKC,EAAYD,EAAcC,GACpDvB,KAAIyB,GACH/B,cAAA,MAAe,UAAQ,OAAMD,SAC1BgC,GADMA,OA0CdJ,CAAaZ,EAAOzB,EAAauB,MAzEhBmB,IACpBhB,EACAC,EACAC,GCXJe,IAASC,OAAOlC,cAACU,EAAG,IAAKyB,SAASC,eAAe,U","file":"static/js/main.c9545bab.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { PaginationProps } from '../../interfaces/PaginationProps';\nimport { getNumbers } from '../../utils';\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const goToPreviousPage = () => {\n    if (currentPage !== 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage !== totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  const renderPagination = () => {\n    const pages = getNumbers(1, totalPages);\n\n    return pages.map(page => (\n      <li\n        key={page}\n        className={classNames('page-item', { active: currentPage === page })}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${page}`}\n          onClick={() => handlePageChange(page)}\n        >\n          {page}\n        </a>\n      </li>\n    ));\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={goToPreviousPage}\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n      {renderPagination()}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === totalPages,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={goToNextPage}\n          aria-disabled={currentPage === totalPages}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const items: string[] = getNumbers(1, total).map(n => `Item ${n}`);\n\n  const signaturePage = (\n    numberPage: number,\n    availableItems: number,\n    allItems: number,\n  ) => {\n    return (\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${numberPage} (items ${(numberPage - 1) * availableItems + 1} - ${Math.min(numberPage * availableItems, allItems)} of ${allItems})`}\n      </p>\n    );\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const visibleItems = (\n    allItems: string[],\n    visiblePage: number,\n    countItems: number,\n  ) => {\n    return (\n      <ul>\n        {allItems\n          .slice((visiblePage - 1) * countItems, visiblePage * countItems)\n          .map(item => (\n            <li key={item} data-cy=\"item\">\n              {item}\n            </li>\n          ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      {signaturePage(currentPage, itemsPerPage, total)}\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      {visibleItems(items, currentPage, itemsPerPage)}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}